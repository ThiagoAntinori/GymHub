<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA4FwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABbySURBVHja7Z15lFTVmcBBFHfR6AQjka5XIM0mAtKCLLLKqtCCCg3JDOIyxDECntG4
        i5rjEjMOUcdg1CjiEo3oGJcJY9wmLrhrIu4YRdxRm2IxGvXN91XdwtdFdXct71W99+7vnfP7Q093U/Xu
        /X53/26bNjyhfVIzk63RXtjV0FsYJhwkzBMWCmcL5wn3CSuEJ4rkGuEs4RzhdGGcMMTQSehgPkOrn5WH
        h6f0gN9G+IEwUKgX5guLhGXC08JTwmphneFrwQ2A9UKj8Lnwkvl3l5nPopKYJowWaoQdhLYIgYenuGDf
        VnCE4cK/CYtNC/6aCb5vAgpuP9DPtkl4R3hQuEk4RZgkJIQd6SXwEPRN2UnoKTQIvxTuFf4mbAxxoBfL
        3813ekS4UpgrHCDs3lwvgYcnrgHfzrSGDabr/Gfho5C37EGgvZnnheuFnwh9jAyRAU/sgr6DmaDTsfvN
        wqoAx+lRRSX4qHC+MFHYCxnwRD3oDzIV+gkzgUagF8aXwitm/qMeGfBEJfC3E4YKPyfofeOrHBl8DxHw
        hK2131uYbWbrGwnaQHsGTwqnCfuaFRNkwFOVwNd17rHCpaaF+oYArSgfC3cJM4U9EQFPpQK/ozDHLNdt
        JBCrjk6m/kW4QOiBCHiCCvzuwgLhWeFbAi+U6AakS8xW5faIgMePwNdW5SJTuQiy6Owx0OXWEWYbNSLg
        IfARASLgKTzwVxNAiIDHrsm9hQR+rNGTkkvNEiKThQT/5uW8o4XnCBBrWG16eV0Rgb2Bv5Uw3iznfUlQ
        WMlK4XhhD0RgV3d/H+HXJrEFgWA3uqT7sMlZsDUSiHfw6wGdnwqvU/Ehhw3CFeaoNr2BGLb6I02WGo7h
        Qku8KhwjbI8E4hH8e5gdfB9TuaGIE4i6bNiL3kC0g3+YGd+xdRdK4U1z7oO5gYgFvqaWOlFYQyWGMtlk
        5gY6I4FoBH9Xk42WsT74ieYvnMKQINzr+kcIL1NZISA+M5et7IQEwhX8O5jce+uopFCB/APLzOUnSCAE
        wd/ZzNjS5YdK8qRZWkYCVQz+oSavPhUSqsGHwglm+IkEKhj8ernGLHPbDBURqslGcwHrbvQGKhP8ukPr
        JPLxQci4wVzgigQC7PKrZX9rdmpR6SBsPG6uOEMCAQS/XgixhEoGIecZYQAS8Df4NYPLcioXRIR3helI
        wL/gf4ZKBRHjEyRQfvD3IfgBCdDyAyABWn4AJEDLD4AEaPkBkEB8BEDLD0jA0uDvQfADErAz+HV77++p
        FGDhZiE7dwzmBD/be8HmbcN9rBKAJ/jbmiw+VASw/QDRD6yQQE7+vvmpzG0sVALgKLEnn4ANy32HkL8P
        oAnnxTqzkCf4+6UyFy5Q6ABNMwudEMtJQc+X6iTcT2EDNJtjcEysJOD5MtulMldyU9AAzbMylbm+PvoC
        yBn3n5IidTdAIei9AztFXgKe4B8vrKVgAQpCG8qzIz0USDW9q+85ChWgKPQasimRlIDnQ7cXrqUwAUri
        +ZTnVuIojvt/InxBQQKUzHWpzF0Y0ZCAJ/j7C6spQICy0DswjonEUMDzIXUG804KD8AXdONcrygJ4Kcs
        +QH4ys2hHgrQ9QewdCjg+VA70/UHsGwo4BHAvwj/oKAAAuM3QrvQSMAT/Lpe+RIFBBAo64WpoRBAToKP
        X1A4ABVLJfb9qkvAI4DBqUymUwoHIHi+NRm1qicAT/Dr0sTdFApARXk7lUmnXx0JeARwuLCJAgGoONcI
        21RcAJ7g75jiQg+AaqF5NUdUvBfgEcDxZjxCYQBUb4fgNhWTgCf4dRbyWQoAoKo0pjx5BCspgFNp/QFC
        wYPCroELwBP83dnvDxCqcwL1gfcCPAI4iZcOEM65gErM/DP2BwjfXEBwKwLM/ANY3Aug9QewtBfgaf1n
        Cd/wogFCy1VBCWAH4R5eMECoecfXMwKe1n8Se/4BIsFFfgtAz/tzwQdANFgl1JQtAE/rXyus4cUCRAKd
        p5tbdi/AI4CTeanlsWFW8ayPwfdeb/F3rzL3CduWLABP8Ose40d5oaUH/toZSXfl1KT7Qn1x/O2IpNto
        /kYkA19YfUTx3/ulw5Luh9MzfwMRlIxm6KoruReQanq1N/f7lcgDkxz3qH6OO2ifhNu/i9C1cA7ukXB/
        NtBx/3pYtAJBP+sHEsD/NcJxJ/Uq7jvrOxoo7+rwfRPub0c57sczkEAZXFGuAHTy73peZGlBcNvBjlsn
        lbpz54Tr1BRPQn6vRhgnInh6SjR6Avq93zsy6c6rc9wuNZnPX8p319/bJ5FwTz7AcT+ajgRK5BVhr3IE
        kBDe4kUW3+3XVnt4baYiJ2vKQ//Gv+7vuJ/MiMB3F64ckQl+p8zvrb+vElg6xnE3zqJeVeyUoKf7PzPF
        HX9Fo5X18uGOm6gpP/izgdAnmXAfPTQZ6kDQVnqNtP6H9PJHfFn5/XNfJz2PQt0qicWlCkC7/0t5gaVx
        qozdO/sUBEpXaQmXjXVCLwCduNSeT8Kn765/Z3zPRHoykWFAecOAgiTgaf3p/peBjl1rfBbArQdHQwAj
        uvsvgHcQQDnDgGmlCGA23f9wCeA2SwUwAQGUy+8LPiZsgn/rFLf8IgAEEBfWmN28Rc3+r+LFIQAEEJut
        wTNaHQZ4uv+H0f1HAAggdqsBbQsVwKW8MASAAGLFC8LuhQigg/AULwwBIIDYpQs7oNlhgKf11x/6zLZt
        u6WCAKovAL/LLsbMK0QAC2wKfA0o3Wu+6vDieEvQgyobmzm6igCCF4C+i88aku7bRxRffu8f+d1ntkgA
        d5oVvhZ3/91iS/BrAN8+1nF/tJ/jjpJKO7pIZsrv3TzGSZ98W48AKioAPSb94CTHPWGAkz41WUy5aVlP
        6Z1wLxzqpGWwwZ5zBm8InVoSgKb9XmlD8OvBmjMGOW63RGa/eaIEsifWTpJg/zBHAgggWAHcMNpx+3Up
        r+z0rIYeO9aDW5ZIQHN6jm5JAMOE9Tac1rtJWu7ahH8n1n4z0kmfhEMAwQpAy+6xQ5PuAfv482/oeY0F
        dY77eYM1vYBTt5gH8Iz/59vwErT1n7Wf4+uJtSP6JJqcW0cAwQnggiH+vVsVuCYgedGeXsAdW2wL9gjg
        ahu6/2/IuG9ot4Svx3UPlEr08tTvKhECCEYAOuk3u6+/71Z7cPeMd9xNdgjgr8Ie+QSws/BE7Lv/KoBp
        SXeIzwIY0LXpWBIBBCOAT0UADfv5L4C77RHA50L/fALolrIg9fd6BIAA7BaAbvFvaDIPYP5jiLARASAA
        BBB7zt0sAM/4/zhb1v8RAAKwXAD/LbTLFcAiBIAAEIAVrDR7fjYLQG8QWY4AEAACsIIPzJzfZgF0siX/
        HwJAAAggnSdwklcA/YS1CAABIABrmOsVQL1JG4QAEAACsIP/9Apgrk1HgBEAAkAAyZv0aLBVKwAIAAEg
        gM1o1q8OWQFchgAQAAKwLkdgRw3+HYX7EQACQABWCeBTYVA2CejTCAABIADrkoQOUQHsKbyIABAAArBK
        ABuEyW3M0cAPEAACQADWZQk+SwUwVFgXhzRfWkE0tVM+Ghuinw/gdyKAVAvfsdroO37zcP+vB6+0ANa1
        8I7XeepaDARwdvYYcGPUv8yTk5PuuYMd9+h+jntM/6bMkf/36xFOpvAiKoAuNZlMtsf23/L7hYkf93Xc
        Xsnycy1WSwBafv8zIX890v83v85JZw9aOyMWEjhXBTAl6nkAtPA0oLVSdDYZX7102jvhzquLtgCywZDv
        +4WF7Gfz+ztXUgA6xLp6pJP+Lp3zfD+lp5NwzxzkpHNLRlwC96kAzopyt/+5+qQ7rLblipfN/Bp1AdhI
        NQRwzSin1fLWjNJ6J0TEE4muUAGcE+UJvZ8XkCEWASAAPwWwORP0vom8l8JEiCciLQDNEKvj+0IFkEIA
        CMAnAWTLXHugEe4FRFsAnxYpAHoACMBPAfTtknBXTE6GemkWASAABBCQAPRqMl19ogeAABAAAogijyMA
        BIAAbBXArC5/QQAIAAHYKoCjen+NABAAArBVAHP2dREAAkAANgqgwXFTx/VHAAgAAVjbA5jd830EgAAQ
        AKsACAABIAD2ASAABIAAEECUBHAUAkAACKAsAZwqfBvFL6AZWo7fP3N2m8NACKCSAtDPdVBtwn11aqZO
        RVQAj6kApgmbovgFtLCWjHbS6bLoASCASgpA69SJA5x0IxThfAA3ZnMCRjIlmFaI945MptM1aYVw6AEg
        gAoIQP9trT+PHpqMekKQdEqwYVFOCqoB/ZoEtKb86pP8LiC97N05HinBnIgQeQGMdNJ1I99300xAk3ol
        3D9OcOKQE/AcFUBv4d2oZwT+eEbSfVyMfNMYx71ehgVLPFwnPHxItLMCa1JQ/ZtLc75bmLhBuGy44/bv
        Gt2koPpvvFif3KIOKfr/9Oc09fmG6Ae/zvudrALY1VwUGPl8/2rvTc2QDcwo3wtw+1jH/fJHzX/HavOF
        sPrI6N8LoMHd3HfcGJ+U4ClhVFYAXA3GxSBcDGLXxSA67B+qAthWWIYAEAACsEoAq4Ru2evBFyEABIAA
        rBKADvs7ZAVwCQJAAAjAKgE8JuySFcCsqO4GRAAIAAGUxFUa+1kBHCJ8hQAQAAKwhkVeAdTackU4AkAA
        CCDNXK8AOgorEQACQABWoL39SV4BbC3cjQAQAAKwAu3td/MKQPkVAkAACMAKnjQbAJsI4DgEgAAQgBXc
        IWyVFoA+RgCDhQ0IAAEggNizMNvwewXwQ+ENBIAAEECs+VKYmE8A2wt/QgAIAAHEmg+FnpuD3yMAKyYC
        EQACsFwAevK3Q3MCOCruW4IRQPQFMHM//9/tH+wRwBKhbRMBeCTQV1gbdwFoHsHJvRK+VSKtpMNrE2mx
        ZDPFIIBgBKBp3TS/o5/vttZJuH+cGO536yOnNhn/5whgV7NGGOuXoJXopANaTydeKFoZ59c1zRCLAIIR
        gH7/G8e0ngm6mLIbJZ/3zcNjk+mnJTT79+gtgj9nGLA47gLQbvrjk5PusNryewH6+4P22TJDLAIIRgDK
        u9KDa+iTKFvg+rd7SOt/7SjHhuB3zSpfp9YEEPt5gGxlXS7dvnE9vksdrtQUSGeThlwrp04g5f59BBCM
        ALI5+16oz9wK1S1RWtnp363rmnCvHOG4nzUkbRHAUqFdXgF4JKAnA9fYsCFCK9LrMm6/TlqAsw500sMC
        TR/eGjoGPVN+/uqRTvr38+WGRwDBCSDbi/tgetJdNtZxFw523H8vsOx0qHb6IMdddJDjPj0lMxy0JPg3
        nwBsTQC6H+ABW45FbjDjSq1QWhkapTVonNkCDZmf29BKhlgEEKwAvJmgswJutexmfhfw3t+zhI+EPoUI
        QLnYohcTCAggeAFAUTwq7NRs8OcIYFwqovcFIgAEAHk5v8XWP0cCnWw4F4AAEIAlbLn/vxUBtDMzhrw8
        BIAAos8rwl6tBn/OMGCm8DUvDwEggMizuKDWP0cACeEtXh4CQACRz/9XX7AAPBLYimEAAkAAFnX/GQb4
        xykD/RfArVERQK2/AhiPACrT/c8jAR0GrOIlFn/W4PzB/p9Zv2tc+AXwtgTqKB97APoOJ4oAdP8/Aihp
        9r++HAFYky3YTzRIbx/rpIPWl1awJnPgSPe/h3332toZSXdOP/9OWurf0S3ajQ3UqxKz/36v6ODPEcCI
        VOYucV5oES2htlg/7utsPjRUTrKRLsIFQ5z0NtYo9H7uneC4fbv4c9JSE7esmGzdtl2/OK2k1j9HAjva
        kCswiEDQDEHH9nfc7k7hJ9W8aDd632Qifdjl/enR6QKrqG452HFHds8IrJTvrtIb0yORlgld/5LQyz96
        +yEAa+4MCEICemJNjwvrnICeQiuGXw5z3IcOieZxVT1k9ZIIUE9MnlHk99aTmUtHO+6r0xj3B3b0t0gB
        JNgaXPpwIH3yrESBRDlNVWsnJoN4Z5DmG7OC16YsAeRI4ApeLEAkeDaVufC3TdmPRwADzJliXjBAnCf/
        WtgZeCMvFyDUvCP0CEIAymRhIy8ZILRc4mvw50hAM4o8wksGCCWNwpAgBaAcn7IgazBABLlZaO978OcI
        oKOZZeSFA4Sr9R8RSOtPLwAgEq3/NoEFP70AAItbf3oBABa3/nkEsJvwv7x8gKryiXBQRVr/PBI4NMX9
        AQDV5OKKBn+OBHYQ7qUQAKrCat93/ZXQCxglrKUwACrOBVUJ/hwBtE1lEg9SIACV47mUyfZbFQHkSGB/
        k4GEggEIni+EWVUN/hwBKD8ziQgoIIBg0Xm37asugDzLgv9H4QAEis63jQxF8OeRgN5AmqKQAALjPG/P
        O2wC0N1I11JIAIHwvLB3qII/jwS6Ci9TWAC+skGYGsrgzyOBWWamkoID8IfLha2jIoD2DAUAfO3614Q6
        +PNIQD/wkxQeQMy7/i1IYII5q0xBApTGZaHv+rcgAE0l/gsKEaAkHhK+H6ngzyOB3YXlFCZA0Sf96kK3
        5l+iBPoJqyhUgIL3+s+OdPDnOSsw00xoUMAALbPIrKRFN/jzSEAnMi4UvqaAAZrlAWHPWAR/HgnozUJ3
        UMgAedFh8sBYBT/7AwAKXu+fFvlxf4HzAZrD/C0KHWDzpN8CoV0sg78ZCUxjUhAgzVWxmfQrQgJqu/lI
        ACxnqUmmE//gb2an4CVUArCU+1PVTuwZklRiS6gMYBnPCL2sDH4kAAR/so/VwY8EwFLejfwe/wAl8E8p
        rhqD+KIXeU4n+FuWQDfTRaLCAMFvoQDamPEREgCC32IJ9BbupvIAwW+vBJgYhCjzunAowc/qANi51DeA
        4EcCYPk6P8HvjwQ6CGdydgBCzh+8O/wIfn8l0JYDRBBilngP9hD8wZ0inEY+AQhZMo9LrDvVV+UVghFk
        FoIQ8Kkwz5xsJfgrLIEak2OQRKNQDV4TxpmhKcFfJQlootELmReACvKN2aTGZF9IJKApx2emuHwEgufv
        qcx1dx0I/vCJQG8g4hoyCIpXhFne/H0Ef/gksLsxNLcSg5/cZc6nEPgRkIDOyE5glQB8YK1wLuv70V0l
        uDaVybtOZYZieVgYSeBHWwLtzbjtZSo0FNnq70Hwx0cEXU1vIEUFh2bQ/SQP5rb6BH98JLCNMFFYQWWH
        HFYLJ7K8Z4cI9DKG04U3qfjWs0m4TuhLq2+XBNqYnVyLzZiPYLCLL4V7TMaebQl8e0Wg+7hHCfcJ/yAw
        rOBF4WhhBwIfCWTZxWwnvse0DgRK/HhHuMgsD9Pd58krAm0VjhGeE74laGIzwaeB34PA5ylUBh2F44Vn
        EUHkW3wCn6fkHkFWBI8IGwkqAp/HThHsZGaM72LVILTLeU8IJwndCXyeoESgS0Z1ZvnwPQKv6jR6lvM6
        EPg8lZKBnjisFU4WHhLWEYwVzcijZ/P/QzgwdzmPwOepdK9gR5Ok9FcmKxE5CoPhY+FWs1zbOU85UDl5
        qioCJWEq6FKTuhwZlMdHZpPWPHPbTnuCnicKMtgKGZTV0nuDfjtae544yOAw4VLhKbOSwP6CDOuFlcIN
        wuzmgp6HJw5DhOw9h3r67Fjhd6byr7fsIM7bppU/TRhq9lu0o6XnsU0IW5nKP0yYYyYS/ySsiUkqs69M
        b+d54RZhocnJkMg3nifgeWzvHSjbC92Eg4UF5rz6cjOPsNYsg30bwqW59Wbf/Z+F24QzhKmmS79bcy08
        Qc/D07IU2poNSJ3M3Qf1Js+hXkh5mXC/8LQ5t/CJ2ZPQ6NPW5a89f+9z4SUzh/GYcJWwSJhrPtMwszy3
        s/euPIKdh8f/XkLuPoRdTRLLOjOmHiJMEc4SzjGcLVxsViVuMPMPd3q43PzMOR50Jn6452/+0Mxh7FLo
        5+MJ7/P/9zn5Zhrgc7cAAAAASUVORK5CYII=
</value>
  </data>
</root>